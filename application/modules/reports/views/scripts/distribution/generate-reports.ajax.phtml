<?php
//Zend_Debug::dump($this->result['vlCalculation'][1]['vlAssay']);

//Zend_Debug::dump($this->result);
//foreach($this->result['vlGraphResult'] as $key=>$vlRes){
//	//print_r($vlRes);
//	echo "Low ".$vlRes['low'];
//	echo "hig ".$vlRes['high']."<br/>";
//	foreach($vlRes['vl'] as $val){
//		echo $val;
//	}
//}
//die;
require_once('tcpdf/tcpdf.php');
$schemeType = $this->result['shipment'][0]['scheme_type'];
//var_dump($this->result['shipment'][0]['responseResult'][0]['testkit1']);die;
$pdfNew = new Zend_Pdf();
$extractor = new Zend_Pdf_Resource_Extractor();
$font = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);
$shipmentCode='';

$dtsResults = array();
foreach($this->possibleDtsResults as $pr){
	$dtsResults[$pr['id']] = ucfirst(strtolower($pr['response']));
}
if(sizeof($this->result['shipment'])>0){
	if (!file_exists(UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports') && !is_dir(UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports')) {
		mkdir(UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports');
        }	
class MYPDF extends TCPDF {
	public $scheme_name = '';

	public function setSchemeName($header, $schemeName, $logo,$logoRight,$comingFrom) {
		$this->scheme_name = $schemeName;
		$this->header = $header;
		$this->logo = $logo;
		$this->logoRight = $logoRight;
		$this->comingFrom = $comingFrom;
	}
    
	//Page header
	public function Header() {
        // Logo
        //$image_file = K_PATH_IMAGES.'logo_example.jpg';
	if(trim($this->logo)!=""){
		if (file_exists(UPLOAD_PATH . DIRECTORY_SEPARATOR . 'logo'. DIRECTORY_SEPARATOR.$this->logo)) {
			$image_file = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'logo'. DIRECTORY_SEPARATOR.$this->logo;
			$this->Image($image_file, 10, 10, 25, '', 'JPG', '', 'T', false, 300, '', false, false, 0, false, false, false);
		}
	}
	if(trim($this->logoRight)!=""){
		if (file_exists(UPLOAD_PATH . DIRECTORY_SEPARATOR . 'logo'. DIRECTORY_SEPARATOR.$this->logoRight)) {
			$image_file = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'logo'. DIRECTORY_SEPARATOR.$this->logoRight;
			$this->Image($image_file, 180, 10, 20, '', 'JPG', '', 'T', false, 300, '', false, false, 0, false, false, false);
		}
	}
       
        // Set font
	$this->SetFont('times', '', 11);
        
	$this->header=str_replace("<div","<span",trim($this->header));
	$this->header=str_replace("</div>","</span><br/>",$this->header);
	
	//error_log($this->header);
	//$y = $this->getY();
	$html=$this->header;
	
	$this->writeHTMLCell(0,0,25,10, $html, 0, 0, 0, true, 'C', true);
	//$this->writeHTML($html, true, false, true, true, 'L');
	
	$html='<p  style="font-weight: bold;text-align:center;">Proficiency Testing Program for Anti-HIV Antibodies Diagnostics using '.$this->scheme_name.'</p>';
	$this->writeHTMLCell(0, 0, 35, 30, $html, 0, 0, 0, true, 'J', true);
	$html='<hr/>';
	$this->writeHTMLCell(0, 0, 10, 45, $html, 0, 0, 0, true, 'J', true);
	
    }

    // Page footer
    public function Footer() {
		$underReport="";
		if(trim($this->comingFrom)!=""){
			// $underReport='       (Under Review)';
		}
        // Position at 15 mm from bottom
        $this->SetY(-15);
        // Set font
        $this->SetFont('helvetica', 'I', 8);
        // Page number
        $this->Cell(0, 10, "Report generated at :".date("d-M-Y H:i:s").$underReport, 0, false, 'C', 0, '', 0, false, 'T', 'M');
	
    }
}
$totalPages=count($this->result['shipment']);
$j=1;
//$this->result['dmResult'];
foreach($this->result['shipment'] as $result){
	//error_log($i);
	// Extend the TCPDF class to create custom Header and Footer
	
	
	// create new PDF document
	$pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
	
	$pdf->setSchemeName($this->header,$result['scheme_name'],$this->logo,$this->logoRight,$this->comingFrom);
	// set document information
	//$pdf->SetCreator(PDF_CREATOR);
	//$pdf->SetAuthor('Nicola Asuni');
	//$pdf->SetTitle('DEPARTMENT OF HEALTH AND HUMAN SERVICES');
	//$pdf->SetSubject('TCPDF Tutorial');
	//$pdf->SetKeywords('TCPDF, PDF, example, test, guide');

	// set default header data
	$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);
	
	// set header and footer fonts
	$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
	$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
	
	// set default monospaced font
	$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
	
	// set margins
	
	$pdf->SetMargins(PDF_MARGIN_LEFT, 50, PDF_MARGIN_RIGHT);
	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
	
	// set auto page breaks
	$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
	
	// set image scale factor
	$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
	
	// set some language-dependent strings (optional)
	if (@file_exists(dirname(__FILE__).'/lang/eng.php')) {
	    require_once(dirname(__FILE__).'/lang/eng.php');
	    $pdf->setLanguageArray($l);
	}

	// ---------------------------------------------------------
	
	// set font
	$pdf->SetFont('times', '', 11);
	
	// add a page
	$pdf->AddPage();
	
	// set some text to print
	//$txt = <<<EOD
	//International Laboratory Branch
	//
	//Custom page header and footer are defined by extending the TCPDF class and overriding the Header() and Footer() methods.
	//EOD;
	//
	//// print a block of text using Write()
	//$pdf->Write(0, $txt, '', 0, 'C', true, 0, false, false, 0);

	// ---------------------------------------------------------
	
	if(trim($result['shipment_date'])!=""){
		$result['shipment_date']=$this->dateFormat($result['shipment_date']);
	}
	if(trim($result['lastdate_response'])!=""){
		$result['lastdate_response']=$this->dateFormat($result['lastdate_response']);
	}
	
	$config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
	$responseDate="";
	$shipmentTestDate="";
	$shipmentScore=0;
	$documentationScore=0;
	$score=0;
	
	if(isset($result['responseResult'][0]['responseDate']) && trim($result['responseResult'][0]['responseDate'])!=""){
		$splitDate=explode(" ",$result['responseResult'][0]['responseDate']);
		$responseDate=$this->dateFormat($splitDate[0]);
	}
	$attributes='';
	if(isset($result['responseResult'][0]['attributes'])){
		$attributes = json_decode($result['responseResult'][0]['attributes'], true);	
	}
	
	
	$sampleRehydrationDate = "";
	if(isset($attributes['sample_rehydration_date']) && trim($attributes['sample_rehydration_date'])!=""){
		$sampleRehydrationDate=$this->dateFormat($attributes['sample_rehydration_date']);
	}
	$shipmentReceiptDate = "";
	if(isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date'])!=""){
		$shipmentReceiptDate=$this->dateFormat($result['responseResult'][0]['shipment_receipt_date']);
	}
	
	if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
		$shipmentTestDate=$this->dateFormat($result['responseResult'][0]['shipment_test_date']);
	}
	
	//if($result['result_name']=='Fail'){
	//	$wishes="";
	//	$splStr=explode("###",$result['failure_reason']);
	//	$k=sizeof($splStr);
	//	for($c=0;$c<$k;$c++){
	//		$wishes.='<p> '.$splStr[$c].'</p><br/>';
	//	}
	//	//$wishes = "<ul><li>" .str_replace("###","</li><li>",$result['failure_reason']) . "</li></ul>";
	//	
	//}
	
	//Coment Details
	
	$labInfo='<table cellpadding="2">';
	
	$labInfo.='<tr>';
	$labInfo.='	<td><strong>Participant Code</strong> <br>'.$result['unique_identifier'].'</td>';
	$labInfo.='	<td><strong>Performing Participant</strong>  <br>'.$result['first_name']." ".$result['last_name'].'</td>';
	$labInfo.='	<td><strong>PT Survey Name and Date</strong> <br>'.$result['distribution_code'].'('.$result['shipment_date'].')</td>';
	$labInfo.='</tr>';
	


	
	$labInfo.='<tr>';
	$labInfo.='	<td><strong>Shipment Date</strong> <br>'.$result['shipment_date'].'</td>';
	$labInfo.='	<td><strong>Shipment Code</strong> <br>'.$result['shipment_code'].'</td>';
	$labInfo.='	<td><strong>Shipment Type</strong>  <br>'.$result['scheme_name']." ".$result['last_name'].'</td>';
	$labInfo.='</tr>';
	
	$labInfo.='<tr>';
	$labInfo.='	<td><strong>Panel Receipt Date</strong> <br>'.$shipmentReceiptDate.'</td>';
	$labInfo.='	<td><strong>Rehydration Date</strong> <br>'.$sampleRehydrationDate.'</td>';

	$labInfo.='	<td><strong>Result Due Date</strong> <br>'.$result['lastdate_response'].'</td>';
	$labInfo.='</tr>';
	
	$labInfo.='<tr>';
	$labInfo.='	<td><strong>Response Date</strong> <br>'.$responseDate.'</td>';
	$labInfo.='	<td><strong>Shipment Test Date</strong> <br>'.$shipmentTestDate.'</td>';
	$labInfo.='	<td>';
	if(isset($attributes['algorithm'])){
	$labInfo.='	<strong>Algorithm</strong> <br>'.ucfirst($attributes['algorithm']);
	}
	$labInfo.=' </td>';
	$labInfo.='</tr>';
	$labInfo.='<tr>';
	$labInfo.='	<td>';
	$labInfo.='	<strong>Supervisor Name</strong> <br>'.($result['participant_supervisor']);
	$labInfo.=' </td>';	
	$labInfo.='	<td>';
	if(isset($this->haveCustom) && $this->haveCustom == 'yes') {
		$labInfo.='	<strong>'.$this->customField1.'</strong> <br>'.$this->shipment['custom_field_1'];
	}
	$labInfo.=' </td>';	
	$labInfo.='	<td>';
	if(isset($this->haveCustom) && $this->haveCustom == 'yes') {
		$labInfo.='	<strong>'.$this->customField2.'</strong> <br>'.$this->shipment['custom_field_2'];
	}
	$labInfo.=' </td>';
	$labInfo.='</tr>';

	
	$labInfo.='</table>';
	//shipment_test_date
	$pdf->writeHTML($labInfo, true, false, true, false, '');
	
	if(sizeof($result['responseResult'])>0){
		if($schemeType != 'vl'){
			$labRes = '<span style="font-weight: bold;font-size:13px;">Your laboratory test results : <br/></span><table border="1" style="font-size:13px;">';
			$labRes .='<tr style="background-color:#dbe4ee;"><td></td><td style="text-align:center;font-weight:bold;">Test-1</td><td style="text-align:center;font-weight:bold;">Test-2</td><td style="text-align:center;font-weight:bold;">Test-3</td><td colspan="4" style="border:none;"></td></tr>';
			$labRes .='<tr><td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Kit Name</td><td>'.$result['responseResult'][0]['testkit1'].'</td><td>'.$result['responseResult'][0]['testkit2'].'</td><td>'.$result['responseResult'][0]['testkit3'].'</td><td colspan="4"></td></tr>';
			$labRes .='<tr><td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Lot No.</td><td>'.$result['responseResult'][0]['lot_no_1'].'</td><td>'.$result['responseResult'][0]['lot_no_2'].'</td><td>'.$result['responseResult'][0]['lot_no_3'].'</td><td colspan="4"></td></tr>';
			$labRes .='<tr><td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Expiry Date</td><td>'.$this->dateFormat($result['responseResult'][0]['exp_date_1']).'</td><td>'.$this->dateFormat($result['responseResult'][0]['exp_date_2']).'</td><td>'.$this->dateFormat($result['responseResult'][0]['exp_date_3']).'</td><td colspan="4"></td></tr>';		
			$labRes .='<tr style="background-color:#dbe4ee;">
							<td style="text-align:center;font-weight:bold;">Specimen Panel ID </td>
							<td style="text-align:center;font-weight:bold;">Result-1</td>
							<td style="text-align:center;font-weight:bold;">Result-2</td>
							<td style="text-align:center;font-weight:bold;">Result-3</td>
							<td style="text-align:center;font-weight:bold;">Expected Result</td>
							<td style="text-align:center;font-weight:bold;">Your Result</td>

							<td style="text-align:center;font-weight:bold;" colspan="2">Score</td>
						</tr>';

			$nonMandatorySamples = array();
			$controlSamples = array();
			$correctSamples = array();
			$totalProperSamples = 0;
			$correctSamplesCount = 0;
			$wrongSamples = array();
			$otherSamples = array();
			$allSamples = array();
			
			foreach($result['responseResult'] as $response){
				$allSamples[] = $response['sample_label'];
				if($response['control'] == 1){
                    $controlSamples[] = $response['sample_label'];
                }
				
                if($response['mandatory'] == 0){
                    $nonMandatorySamples[] = $response['sample_label'];
                }
				else if($response['calculated_score'] == 'Pass'){
					$correctSamples[] = $response['sample_label'];
				}else if($response['calculated_score'] == 'Fail'){
					$wrongSamples[] = $response['sample_label'];
				}else{
					$otherSamples[] = $response['sample_label'];
				}
			}
			
			$correctSamplesCount = count($correctSamples);
			$totalProperSamples = $correctSamplesCount + count($wrongSamples);
			$maxDocumentationPoints = (isset($config->evaluation->dts->documentationScore) && $config->evaluation->dts->documentationScore > 0) ? ($config->evaluation->dts->documentationScore) : 0;
			$maximumResponseScore = 100 - $maxDocumentationPoints;
			$scorePerCorrectSample = round($maximumResponseScore/(count($allSamples)-count($nonMandatorySamples) - count($controlSamples)),2);
			
			foreach($result['responseResult'] as $response){
                
				if($response['calculated_score'] == 'Pass'){
					$img = UPLOAD_PATH . '/../images/check.jpg';
					
					$score = ($response['control'] == 0) ? $scorePerCorrectSample : "N.A.";
				} else if($response['calculated_score'] == 'Fail'){
					$img = UPLOAD_PATH . '/../images/cross.jpg';
					$score = ($response['control'] == 0) ? 0 : "N.A.";
				}else{
					$img = UPLOAD_PATH . '/../images/minus.jpg';
					$score = "N.A.";
				}
				$labRes.='<tr>
							<td style="text-align:center;">'.$response['sample_label'].'</td>
							<td>'.(isset($response['test_result_1']) && $response['test_result_1'] !="" ? $dtsResults[$response['test_result_1']] : "").'</td>
							<td>'.(isset($response['test_result_2']) && $response['test_result_2'] !="" ? $dtsResults[$response['test_result_2']] : "").'</td>
							<td>'.(isset($response['test_result_3']) && $response['test_result_3'] !="" ? $dtsResults[$response['test_result_3']] : "").'</td>
							<td>'.ucfirst(strtolower($response['referenceResult'])).'</td>
							<td>'.ucfirst(strtolower($response['labResult'])).'</td>
							
							<td style="text-align:center;"><img style="width:11px;" src="'.$img.'" /></td>
							<td style="text-align:center;">'.$score.'</td>
						  </tr>';
			}
			$labRes.='</table>';

                     
			$pdf->SetLeftMargin(15);
			$pdf->writeHTML($labRes, true, false, true, false, '');
			
            if(count($nonMandatorySamples) > 0){
                
                $nmsTable="The following samples have been excluded from this evaluation : ".implode(", ",$nonMandatorySamples);    
                $nmsTable.="<br/>";
                $pdf->writeHTML($nmsTable, true, false, true, false, '');
            }
					
			
			//Let us now calculate documentation score
			$documentationScore = 0;
			$documentationScorePerItem = (isset($config->evaluation->dts->documentationScore) && $config->evaluation->dts->documentationScore > 0) ? ($config->evaluation->dts->documentationScore / 5) : 0;
			$attributes = json_decode($result['attributes'], true);
			
			$img = array();
			$imgPass = UPLOAD_PATH . '/../images/check.jpg';
			$imgFail = UPLOAD_PATH . '/../images/cross.jpg';
			
			$docRes='<span style="font-weight:bold;font-size:13px;">Your documentation score :</span> <br/>
					<table border="1" style="font-size:13px;width:100%;">
						<tr style="background-color:#dbe4ee;">
							<td style="text-align:center;font-weight:bold;width:75%">Documentation Item</td>
							<td style="text-align:center;font-weight:bold;width:25%" colspan="2">Score</td>
						</tr>';


			if (strtolower($result['responseResult'][0]['supervisor_approval']) == 'yes' && trim($result['responseResult'][0]['participant_supervisor']) != "") {
				$scoreDoc =  $documentationScorePerItem;
				$img = $imgPass;
			} else {
				$scoreDoc = 0;
				$img = $imgFail;
			}
			
			$docRes.='<tr>
							<td style="text-align:left;font-weight:bold;">Supervisor Approval</td>
							<td style="text-align:center;"><img style="width:11px;" src="'.$img.'" /></td>
							<td style="text-align:center;">'.$scoreDoc.'</td>
					</tr>';
			

			if (isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date']) != "") {
				$scoreDoc =  $documentationScorePerItem;
				$img = $imgPass;
			} else {
				$scoreDoc = 0;
				$img = $imgFail;
			}
			
			$docRes.='<tr>
							<td style="text-align:left;font-weight:bold;">Panel/Shipment Receipt Date Specified</td>
							<td style="text-align:center;"><img style="width:11px;" src="'.$img.'" /></td>
							<td style="text-align:center;">'.$scoreDoc.'</td>
					</tr>';
			

			
			if (isset($attributes['sample_rehydration_date']) && trim($attributes['sample_rehydration_date']) != "") {
				$scoreDoc =  $documentationScorePerItem;
				$img = $imgPass;
			} else {
				$scoreDoc = 0;
				$img = $imgFail;
			}
						
			
			$docRes.='<tr>
							<td style="text-align:left;font-weight:bold;">Reporting of the Sample Rehydration Date</td>
							<td style="text-align:center;"><img style="width:11px;" src="'.$img.'" /></td>
							<td style="text-align:center;">'.$scoreDoc.'</td>
					</tr>';
			

			if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
				$scoreDoc =  $documentationScorePerItem;
				$img = $imgPass;
			} else {
				$scoreDoc = 0;
				$img = $imgFail;
			}
						
			$docRes.='<tr>
							<td style="text-align:left;font-weight:bold;">Reporting of the Shipment Test Date</td>
							<td style="text-align:center;"><img style="width:11px;" src="'.$img.'" /></td>
							<td style="text-align:center;">'.$scoreDoc.'</td>
					</tr>';
			

			$config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
			$sampleRehydrationDate = new DateTime($attributes['sample_rehydration_date']);
			$testedOnDate = new DateTime($result['responseResult'][0]['shipment_test_date']);
			$interval = $sampleRehydrationDate->diff($testedOnDate);
			
			// Testing should be done within 24*($config->evaluation->dts->sampleRehydrateDays) hours of rehydration.
			$sampleRehydrateDays = $config->evaluation->dts->sampleRehydrateDays;
			$rehydrateHours = $sampleRehydrateDays*24;

			if ($interval->days > $sampleRehydrateDays) {
				$scoreDoc = 0;
				$img = $imgFail;
			} else {
				$scoreDoc =  $documentationScorePerItem;
				$img = $imgPass;
			}
			
			$docRes.='<tr>
							<td style="text-align:left;font-weight:bold;">Testing to be done within '.$rehydrateHours.' hours of rehydration.</td>
							<td style="text-align:center;"><img style="width:11px;" src="'.$img.'" /></td>
							<td style="text-align:center;">'.$scoreDoc.'</td>
					</tr>';
			
			$docRes.='</table>';
			
			$pdf->writeHTML($docRes, true, false, true, false, '');
			
			if(isset($result['responseResult'][0]['failure_reason']) && $result['responseResult'][0]['failure_reason'] != "" && $result['responseResult'][0]['failure_reason'] != "[]" && $result['responseResult'][0]['failure_reason'] != null){
				$failRes = '<span style="font-weight:bold;font-size:13px;">Suggested Corrective actions for your response :</span> <br/>';
				$failRes .= '<table border="1" style="font-size:13px;">';
				$failRes.= '<tr style="background-color:#dbe4ee;"><td style="text-align:center;font-weight:bold;">Failure Reasons (or) Warnings</td><td style="text-align:center;font-weight:bold;">Corrective Actions (if any)</td></tr>';
				$warnings = json_decode($result['responseResult'][0]['failure_reason'],true);
				foreach($warnings as $warning){
					$failRes.= '<tr>';
					$failRes.= '<td> '.(isset($warning['warning']) ? $warning['warning'] : "").' </td>';
					$failRes.= '<td> '.(isset($warning['correctiveAction']) ? $warning['correctiveAction'] : "").' </td>';
					$failRes.= '</tr>';
				}
				$failRes.= '</table>';
				$pdf->writeHTML($failRes, true, false, true, false, '');
			}
			
            			
		}else{
			$labRes='<h5>'.$result['responseResult'][0]['vl_assay'].'</h5>';
			$labRes.='<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:13px;">
						<tr>
							<td style="">Specimen ID </td>
							<td style="">Your Results<br/>(log<sub>10</sub> copies/ml)</td>
							<td style="">Mean<br/>(log<sub>10</sub> copies/ml)</td>
							<td style="">S.D.</td>
							<td style="">Low</td>
							<td style="">High</td>
							<td style="">Your Grade</td>
						</tr>';
			if($result['is_excluded'] == 'yes'){
				foreach($result['responseResult'] as $response){
					$labRes.='<tr>
								<td style="text-align:center;">'.$response['sample_label'].'</td>
								<td>'.$response['reported_viral_load'].'</td>
								<td>'.$response['mean'].'</td>
								<td>'.$response['sd'].'</td>
								<td>'.$response['low'].'</td>
								<td>'.$response['high'].'</td>
								<td>Manual Exclusion</td>
							  </tr>';
				}
			}else{
				foreach($result['responseResult'] as $response){
					$labRes.='<tr>
								<td style="text-align:center;">'.$response['sample_label'].'</td>
								<td>'.$response['reported_viral_load'].'</td>
								<td>'.$response['mean'].'</td>
								<td>'.$response['sd'].'</td>
								<td>'.$response['low'].'</td>
								<td>'.$response['high'].'</td>
								<td>'.$response['grade'].'</td>
							  </tr>';
				}
			}
			$labRes.='</table>';
			$pdf->SetLeftMargin(15);
			$pdf->writeHTML($labRes, true, false, true, false, '');
		}
	}
	
	include_once("pChart/class/pData.class.php"); 
	include_once("pChart/class/pDraw.class.php");
	include_once("pChart/class/pImage.class.php"); 
	include_once("pChart/class/pScatter.class.php"); 
	
	
 
 
	
	if(trim($result['shipment_score'])!=""){
		$shipmentScore=$result['shipment_score'];
	}
	
	
	
	//$maxDocumentationPoints = $config->evaluation->dts->documentationScore;
	//$maxResponsePoints = 100-$maxDocumentationPoints;
	$score=($shipmentScore/count($result['responseResult']))*100;
	//$score=100*round($shipmentScore/$result['max_score'],2);
	
	
	//if($result['is_excluded'] == 'yes'){
	//	$wishes='<p>Your response was not considered for evaluation</p><br/>';
	//}
	
	if($score>=$this->passPercentage){
		$wishes='<p>Congratulations! You have received a satisfactory score of '.round($score,2).'%.</p><br/>';
	}else{
		$wishes='<p>You have received a score of '.round($score,2).'%.</p><br/>';
	}
	//if($result['is_excluded'] != 'yes'){
		//$wishes.="<br/><strong style='font-weight:bold;'>Score Breakup:</strong>";
		//$wishes.="<br/>Score for Correct Responses (out of $maxResponsePoints) : $shipmentScore (You reported ".$correctSamplesCount." samples correctly out of ".$totalProperSamples. ")";
		//$wishes.="<br/>Score for Documentation (out of $maxDocumentationPoints) : $documentationScore";
	//}
	
	
	$pdf->SetLeftMargin(15);
	
	$pdf->writeHTML($wishes, true, false, true, false, '');
	
	if($schemeType=='vl'){
		if(count($this->result['vlCalculation'])>0){
				
			foreach($this->result['vlCalculation'] as $vlCal){
				$calRes='<h5> Summary of '.$vlCal['vlAssay'].' Results</h5>';
				$calRes.='<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:13px;">
				<tr>
					<td style="">Platform </td>
					<td style="">Specimen ID </td>
					<td style="">Mean<br/>(log<sub>10</sub> copies/ml)</td>
					<td style="">S.D.</td>
					<td style="">CV</td>
				</tr>';
				//Zend_Debug::dump($vlCal[0]['low_limit']);
				//Zend_Debug::dump(count($vlCal));
				//Zend_Debug::dump($vlCal['vlAssay']);
				$countCal=count($vlCal)-1;
				for($c=0;$c<$countCal;$c++){
					if(isset($vlCal[$c]['mean'])){
					$calRes.='<tr>';
					if($c==0){
					$calRes.='<td style="text-align:center;" rowspan="'.$countCal.'">'.$vlCal['shortName'].'</td>';	
					}
					
					
					$calRes.='<td>'.$vlCal[$c]['sample_label'].'</td>
						<td>'.$vlCal[$c]['mean'].'</td>
						<td>'.$vlCal[$c]['sd'].'</td>
						<td>'.$vlCal[$c]['cv'].'</td>
					  </tr>';
					}
				}
				$calRes.='</table>';
				
				$pdf->writeHTML($calRes, true, false, true, false, '');
			}
		}
		
		foreach($this->result['vlGraphResult'] as $key=>$vlRes){
		/* Create and populate the pData object */
		$myData = new pData();  
		foreach($vlRes['vl'] as $val){
			$myData->addPoints($val,"Probe 1");
		}
		$myData->addPoints(array($vlRes['low'],$vlRes['high']),"Probe 2");
		/* Create the X axis and the binded series */
		//for ($i=0;$i<=360;$i=$i+10) { $myData->addPoints(rand(1,20)*10+rand(0,$i),"Probe 1"); }
		//for ($i=0;$i<=360;$i=$i+10) { $myData->addPoints(rand(1,2)*10+rand(0,$i),"Probe 2"); }
		$myData->setAxisName(0,"X-Index");
		$myData->setAxisXY(0,AXIS_X);
		$myData->setAxisPosition(0,AXIS_POSITION_TOP);
		
		/* Create the Y axis and the binded series */
		for ($i=0;$i<=390;$i=$i+1) { $myData->addPoints($i,"Probe 3"); }
		$myData->setSerieOnAxis("Probe 3",1);
		$myData->setAxisName(1,"Y-Index");
		$myData->setAxisXY(1,AXIS_Y);
		$myData->setAxisPosition(1,AXIS_POSITION_LEFT);
		
		/* Create the 1st scatter chart binding */
		$myData->setScatterSerie("Probe 1","Probe 3",0);
		$myData->setScatterSerieDescription(0,"This year");
		$myData->setScatterSerieColor(0,array("R"=>0,"G"=>0,"B"=>0));
		
		/* Create the 2nd scatter chart binding */
		$myData->setScatterSerie("Probe 2","Probe 3",1);
		$myData->setScatterSerieDescription(1,"Last Year");
		
		/* Create the pChart object */
		$myPicture = new pImage(400,400,$myData);
		
		/* Draw the background */
		$Settings = array("R"=>170, "G"=>183, "B"=>87, "Dash"=>1, "DashR"=>190, "DashG"=>203, "DashB"=>107);
		$myPicture->drawFilledRectangle(0,0,400,400,$Settings);
		
		/* Overlay with a gradient */
		$Settings = array("StartR"=>219, "StartG"=>231, "StartB"=>139, "EndR"=>1, "EndG"=>138, "EndB"=>68, "Alpha"=>50);
		$myPicture->drawGradientArea(0,0,400,400,DIRECTION_VERTICAL,$Settings);
		$myPicture->drawGradientArea(0,0,400,20,DIRECTION_VERTICAL,array("StartR"=>0,"StartG"=>0,"StartB"=>0,"EndR"=>50,"EndG"=>50,"EndB"=>50,"Alpha"=>80));
		
		/* Write the picture title */ 
		$myPicture->setFontProperties(array("FontName"=>"../fonts/Silkscreen.ttf","FontSize"=>6));
		$myPicture->drawText(10,13,"drawScatterBestFit() - Linear regression",array("R"=>255,"G"=>255,"B"=>255));
		
		/* Add a border to the picture */
		$myPicture->drawRectangle(0,0,399,399,array("R"=>0,"G"=>0,"B"=>0));
		
		/* Set the default font */
		$myPicture->setFontProperties(array("FontName"=>"../fonts/pf_arma_five.ttf","FontSize"=>6));
		
		/* Set the graph area */
		$myPicture->setGraphArea(50,60,350,360);
		
		/* Create the Scatter chart object */
		$myScatter = new pScatter($myPicture,$myData);
		
		/* Draw the scale */
		$myScatter->drawScatterScale();
		
		/* Turn on shadow computing */
		$myPicture->setShadow(TRUE,array("X"=>1,"Y"=>1,"R"=>0,"G"=>0,"B"=>0,"Alpha"=>10));

		/* Draw a scatter plot chart */
		$myScatter->drawScatterPlotChart();
	
		/* Draw the legend */
		$myScatter->drawScatterLegend(280,380,array("Mode"=>LEGEND_HORIZONTAL,"Style"=>LEGEND_NOBORDER));
	
		$image_file = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR.$result['shipment_code']. DIRECTORY_SEPARATOR.'scatter-chart.png';
		//$myPicture->autoOutput("pictures/example.drawBubbleChart.png"); 
		$myPicture->render("$image_file");
		
		$pdf->Image($image_file, 5, $pdf->getY()+5, '', '', '', '', '', false, 300);
		if (file_exists($image_file)) {
			unlink($image_file);
		}
}
	}
	//if(trim($result['distribution_date'])!=""){
	//	$result['distribution_date']=$this->dateFormat($result['distribution_date']);
	//}
	if(trim($result['shipment_comment'])!="" || trim($result['evaluationComments'])!="" || trim($result['optional_eval_comment'])!=""){
		$comment='<br/><br/><table border="1" style="width:100%;font-size:13px;" cellpadding="3">';

		
		if(trim($result['evaluationComments'])!=""){
			$comment.='<tr>';
			$comment.='<td style="font-weight:bold;width:30%;">Evaluation Comments </td>';
			$comment.='<td style="width:70%;">'.$result['evaluationComments'].'</td>';
			$comment.='</tr>';
		}
		
		if(trim($result['optional_eval_comment'])!=""){
			$comment.='<tr>';
			$comment.='<td style="font-weight:bold;width:30%;">Specific Comments/Feedback</td>';
			$comment.='<td style="width:70%;">'.$result['optional_eval_comment'].'</td>';
			$comment.='</tr>';
		}
		
		if(trim($result['shipment_comment'])!=""){
			$comment.='<tr>';
			$comment.='<td style="font-weight:bold;" colspan="2">'.$result['shipment_comment'].'</td>';
			$comment.='</tr>';
		}		
		
		$comment.='</table>';
		$pdf->writeHTML($comment, true, false, true, false, '');
	}
	
	$html='<p>Thank you for participating in the HIV Serology '.strtoupper($result['scheme_type']).' Proficiency Testing Program.</p>';
	$pdf->writeHTML($html, true, false, true, false, '');
	
	if (ob_get_contents()) ob_end_clean();
	//Close and output PDF document
	if(isset($result['last_name']) && trim($result['last_name'])!=""){
		$result['last_name']="_".$result['last_name'];
	}
	
	if (!file_exists(UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']) && !is_dir(UPLOAD_PATH . DIRECTORY_SEPARATOR .'reports'. DIRECTORY_SEPARATOR.$result['shipment_code'])) {
		mkdir(UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']);
        }
	
	$fileName=$result['first_name'].$result['last_name']."-".$result['map_id'].".pdf";
	$fileName = preg_replace('/[^A-Za-z0-9.]/', '-', $fileName);
	$fileName = str_replace(" ", "-", $fileName);
	$filePath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR .$result['shipment_code']. DIRECTORY_SEPARATOR .$fileName;
	$created=$pdf->Output($filePath, "F");
	
	//$pdf->Output($fileName, 'I');
        
	
	
        $loadpdf = Zend_Pdf::load($filePath);
        
        foreach($loadpdf->pages as $page){
        $pdfExtract = $extractor->clonePage($page);
        //$pdfExtract->setFont($font, 8) ->drawText('Page '.$j.' / '.$totalPages, 280, 50);
        $pdfNew->pages[] = $pdfExtract;
        
        }
        $shipmentCode=$result['shipment_code'];
        $j++;
}
//$mergePdf = $shipmentCode."-bulk-participant-report.pdf";
$mergePdf = $shipmentCode."-".$this->bulkfileNameVal."-bulk-participant-report.pdf";
$mergeFilePath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR .$shipmentCode. DIRECTORY_SEPARATOR .$mergePdf;
$pdfNew ->save($mergeFilePath);

foreach($this->result['dmResult'] as $key=>$dmRes){
	$pdfNew->pages=array();
	//echo $key."key ".$dmRes."<br/>";
	$expRes=explode(",",$dmRes);
	$resCount=count($expRes);
	if($resCount>0){
		foreach($expRes as $res){
			$expStrRes=explode("#",$res);
			$dmFileName=$expStrRes[0].$key.".pdf";
			$participantFileName=$expStrRes[2].".pdf";
			$participantFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $participantFileName);
			$participantFileName = str_replace(" ", "-", $participantFileName);
			$filePath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR .$shipmentCode. DIRECTORY_SEPARATOR .$participantFileName;
			
			$loadpdf = Zend_Pdf::load($filePath);
			foreach($loadpdf->pages as $page){
				$pdfExtract = $extractor->clonePage($page);
				$pdfNew->pages[] = $pdfExtract;
			}
		}
	}
	
	
	$dmFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $dmFileName);
	$dmFileName = str_replace(" ", "-", $dmFileName);
	
	
	$mergePdf = $shipmentCode."-".$dmFileName;
	$mergeFilePath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR .$shipmentCode. DIRECTORY_SEPARATOR .$mergePdf;
	$pdfNew ->save($mergeFilePath);
	
}
	

//============================================================+
// END OF FILE
//============================================================+
echo "success";
}